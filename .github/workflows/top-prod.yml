name: prod

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  setup:
    if: ${{ github.actor != 'github-actions[bot]' && github.ref == 'refs/heads/main' }} 
    runs-on: windows-latest
    outputs:
      VERSION: ${{ steps.versionize2.outputs.version }}
      TAG: v${{ steps.versionize2.outputs.version }}
      NAME: "gcd"
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: '0'
      - name: install versionize
        run: dotnet tool install --global Versionize

      - name: setup git
        run: |
          git config --local user.email "dawid.wozny@zoryatec.com"
          git config --local user.name "github-actions[bot]"

      - name: run versionize
        id: versionize
        run: versionize --exit-insignificant-commits
        continue-on-error: true

      - name: no release required
        if: steps.versionize.outcome != 'success'
        run: echo "Skipping publishing. No release required."
 
      - name: push changes
        if: steps.versionize.outcome == 'success'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
          tags: true

      - name: get current version
        id: versionize2
        run: |
          VERSION=$(versionize inspect)
          echo "VERSION is: $VERSION"
          echo "version=$VERSION" >> $GITHUB_ENV
          echo "version=$VERSION" >> $GITHUB_OUTPUT
        shell: bash

      
  release:
    uses: ./.github/workflows/base-prod.yml
    needs: setup
    with:
      version: ${{needs.setup.outputs.VERSION }}
      name: ${{needs.setup.outputs.NAME }}
    secrets:
      nipkg-feed: ${{secrets.PROD_NIPKG_AZ_BLOB_FEED }}
      nipkg-feed-sas: ${{secrets.PROD_NIPKG_AZ_BLOB_FEED_SAS }}
      
      nuget-feed: ${{ secrets.PROD_NUGET_FEED }}
      nuget-feed-key: ${{ secrets.PROD_NUGET_KEY }} 
   
      test-feed-add-pkg: ${{ secrets.TEST_AZUREADDPKGTESTFEEDURI }}
      test-feed-push-pull: ${{ secrets.TEST_AZUREPUSHPULLTESTFEEDURI }}
      test-feed-pull: ${{ secrets.TEST_AZUREPULLTESTFEEDURI }}
      test-feed-generic: ${{ secrets.TEST_AZUREFEEDURI }}
      
      test-git-repo: ${{ secrets.TEST_GIT_REPO }}
      test-git-user: ${{ secrets.TEST_GIT_USER }}
      test-git-password: ${{ secrets.TEST_GIT_PASSWORD }}

      test-smb-share: ${{ secrets.TEST_SMB_URL }}
      test-smb-user: ${{ secrets.TEST_SMB_USER }}
      test-smb-password: ${{ secrets.TEST_SMB_PASSWORD }}
      
      test-rclone-sharepoint-client-id: ${{ secrets.TEST_RCLONE_SHAREPOINT_CLIENT_ID }}
      test-rclone-sharepoint-client-secret: ${{ secrets.TEST_RCLONE_SHAREPOINT_CLIENT_SECRET }}
      test-rclone-sharepoint-tenant: ${{ secrets.TEST_RCLONE_SHAREPOINT_TENANT }}
      test-rclone-sharepoint-drive-id: ${{ secrets.TEST_RCLONE_SHAREPOINT_DRIVE_ID }}
      

